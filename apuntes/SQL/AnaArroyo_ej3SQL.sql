--------------------------------------------------------------------------------
-- PASO 1: Diseño y DDL inicial con generación automática de id_producto y codigo_sku
--------------------------------------------------------------------------------

-- Crear tabla productos_ana con restricciones y valores por defecto
CREATE TABLE productos_ana (
    id_producto NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,                              -- ID autogenerado y clave primaria
    nombre VARCHAR2(200) NOT NULL,                               -- Nombre del producto, obligatorio, ampliado para SEO
    categoria VARCHAR2(20) NOT NULL CHECK (                     -- Categoría, obligatoria y validada
        categoria IN ('TECNOLOGIA', 'HOGAR', 'DEPORTE')
    ),
    precio NUMBER(10,2) DEFAULT 0 CHECK (precio >= 0),          -- Precio, >= 0, por defecto 0
    stock NUMBER DEFAULT 0 NOT NULL CHECK (stock >= 0),         -- Stock, no nulo, por defecto 0
    fecha_alta DATE DEFAULT SYSDATE NOT NULL,                   -- Fecha de alta, por defecto fecha sistema
    estado VARCHAR2(10) DEFAULT 'ACTIVO' CHECK (                -- Estado, solo ACTIVO o INACTIVO, por defecto ACTIVO
        estado IN ('ACTIVO', 'INACTIVO')
    ),
    sku VARCHAR2(50) UNIQUE,                             -- Código SKU único, se genera automáticamente si no se indica
    usuario_alta VARCHAR2(30) DEFAULT USER NOT NULL,            -- Usuario que crea el registro, por defecto USER de Oracle
    tipo_iva NUMBER DEFAULT 21 CHECK (tipo_iva BETWEEN 0 AND 100) -- Tipo de IVA, % entero, por defecto 21
);

--Cambiar el campo sku a codigo_sku y aumentar su tamaño a 100

ALTER TABLE productos_ana RENAME COLUMN sku TO codigo_sku;
ALTER TABLE productos_ana MODIFY (codigo_sku VARCHAR2(100));

--------------------------------------------------------------------------------
-- PASO 2: Carga inicial de 5 productos de ejemplo
--------------------------------------------------------------------------------

INSERT INTO productos_ana (nombre, categoria, precio, stock, fecha_alta, estado, codigo_sku)
SELECT 
  'Smartphone X10',
  'TECNOLOGIA',
  499.99,
  15,
  TO_DATE('01/09/2025','DD/MM/YYYY'),
  'ACTIVO',
  SUBSTR('TECNOLOGIA', 1, 3) || '-' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TO_CHAR(TRUNC(DBMS_RANDOM.VALUE(1000,9999)))
FROM dual;

-- Producto TECNOLOGIA con datos por defecto (fecha_alta, estado, codigo_sku generados automáticamente)
INSERT INTO productos_ana (nombre, categoria, precio, stock, codigo_sku)
SELECT
  'Portátil Pro',
  'TECNOLOGIA',
  899.99,
  10,
  SUBSTR('TECNOLOGIA', 1, 3) || '-' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TO_CHAR(TRUNC(DBMS_RANDOM.VALUE(1000,9999)))
FROM dual;

-- Producto HOGAR con stock > 0
INSERT INTO productos_ana (nombre, categoria, precio, stock, codigo_sku)
SELECT
  'Aspiradora Robot',
  'HOGAR',
  299.50,
  5,
  SUBSTR('HOGAR', 1, 3) || '-' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TO_CHAR(TRUNC(DBMS_RANDOM.VALUE(1000,9999)))
FROM dual;

-- Producto HOGAR con stock = 0 (para pruebas posteriores)
INSERT INTO productos_ana (nombre, categoria, precio, stock, codigo_sku)
SELECT
  'Cafetera Express',
  'HOGAR',
  120.00,
  0,
  SUBSTR('HOGAR', 1, 3) || '-' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TO_CHAR(TRUNC(DBMS_RANDOM.VALUE(1000,9999)))
FROM dual;

-- Producto DEPORTE con precio 0 y estado INACTIVO
INSERT INTO productos_ana (nombre, categoria, precio, stock, estado, codigo_sku)
SELECT
  'Balón de fútbol',
  'DEPORTE',
  0,
  20,
  'INACTIVO',
  SUBSTR('DEPORTE', 1, 3) || '-' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TO_CHAR(TRUNC(DBMS_RANDOM.VALUE(1000,9999)))
FROM dual;

-- Intento de insertar producto con precio negativo para probar la restricción y error
INSERT INTO productos_ana (nombre, categoria, precio, stock, codigo_sku)
SELECT
  'Producto Erróneo',
  'TECNOLOGIA',
  -10,
  5,
  SUBSTR('TECNOLOGIA', 1, 3) || '-' || TO_CHAR(SYSDATE, 'YYYYMMDDHH24MISS') || TO_CHAR(TRUNC(DBMS_RANDOM.VALUE(1000,9999)))
FROM dual;


/---Devuelve ORA-02290: restricción de control (GETAFE.SYS_C008352) violada
--- El codigo de la constraint indica que no cumple con la restricción de que el precio sea mayor o igual a 0

--------------------------------------------------------------------------------
-- PASO 3: Mantenimiento de catálogo (UPDATE)
--------------------------------------------------------------------------------

-- Aumentamos el precio un 5% multiplicando por 1.05 (100% + 5%)
-- Usamos ROUND(..., 2) para redondear a 2 decimales, típico para precios en euros
UPDATE productos_ana
SET precio = ROUND(precio * 1.05, 2)
WHERE categoria = 'TECNOLOGIA';

-- Marcar como INACTIVO los productos con stock = 0
UPDATE productos_ana
SET estado = 'INACTIVO'
WHERE stock = 0;

-- Normalizar las fechas de alta al primer día del mes
UPDATE productos_ana
SET fecha_alta = TRUNC(fecha_alta, 'MM');

--------------------------------------------------------------------------------
-- PASO 4: Depuración (DELETE)
--------------------------------------------------------------------------------

-- Eliminar productos INACTIVO con stock = 0 (no visibles y sin rotación)
DELETE FROM productos_ana
WHERE estado = 'INACTIVO' AND stock = 0;

--------------------------------------------------------------------------------
-- PASO 5: Consultas de verificación
--------------------------------------------------------------------------------

-- Mostrar los 3 productos con mayor precio (descendente)
SELECT *
FROM productos_ana
ORDER BY precio DESC
FETCH FIRST 3 ROWS ONLY;
